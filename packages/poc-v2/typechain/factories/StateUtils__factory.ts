/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { StateUtils } from "../StateUtils";

export class StateUtils__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(api3TokenAddress: string, overrides?: Overrides): Promise<StateUtils> {
    return super.deploy(
      api3TokenAddress,
      overrides || {}
    ) as Promise<StateUtils>;
  }
  getDeployTransaction(
    api3TokenAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(api3TokenAddress, overrides || {});
  }
  attach(address: string): StateUtils {
    return super.attach(address) as StateUtils;
  }
  connect(signer: Signer): StateUtils__factory {
    return super.connect(signer) as StateUtils__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StateUtils {
    return new Contract(address, _abi, signerOrProvider) as StateUtils;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "api3TokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimReleaseReferenceBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimReleases",
    outputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentApr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "locks",
    outputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxApr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minApr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardEpochLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardPaidForEpoch",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardReleases",
    outputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardVestingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeTarget",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
    ],
    name: "updateAndGetBalanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateCoeff",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "targetBlock",
        type: "uint256",
      },
    ],
    name: "updateUserState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "unstaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "locked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastStateUpdateTargetBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unstakeScheduledAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unstakeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052622503f660809081525062093a8060a090815250622625a060085563047868c06009556a084595161401484a000000600a55620f4240600b55600854600f5534801561004f57600080fd5b5060405161155f38038061155f8339818101604052602081101561007257600080fd5b8101908080519060200190929190505050600260405180604001604052804381526020016001815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050600360405180604001604052804381526020016001815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060805160a0516113b66101a96000398061068d52806106d55280610e475250806109b95280610c2f52806110b452506113b66000f3fe608060405234801561001057600080fd5b506004361061012b5760003560e01c806358780938116100ad578063ca09304711610071578063ca093047146104ab578063decac4f5146104ed578063ee677b361461050b578063eebb19801461056d578063f4dadc61146105b65761012b565b8063587809381461037757806362bc7855146103b9578063784b3c5d146103fb57806392093b3614610419578063a87430ba146104375761012b565b80632eebce2c116100f45780632eebce2c1461025b57806339a288bd146102a957806341cb8c20146102f25780634eb05c471461033b5780634f322ae8146103595761012b565b806201e86214610130578063106644131461019257806313f2dad0146101b057806320a0a0e9146101f95780632dd5090c14610217575b600080fd5b61017c6004803603604081101561014657600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105ff565b6040518082815260200191505060405180910390f35b61019a610654565b6040518082815260200191505060405180910390f35b6101dc600480360360208110156101c657600080fd5b810190808035906020019092919050505061065a565b604051808381526020018281526020019250505060405180910390f35b61020161068b565b6040518082815260200191505060405180910390f35b6102436004803603602081101561022d57600080fd5b81019080803590602001909291905050506106af565b60405180821515815260200191505060405180910390f35b6102a76004803603604081101561027157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106cf565b005b6102d5600480360360208110156102bf57600080fd5b8101908080359060200190929190505050610b2c565b604051808381526020018281526020019250505060405180910390f35b61031e6004803603602081101561030857600080fd5b8101908080359060200190929190505050610b5d565b604051808381526020018281526020019250505060405180910390f35b610343610b8e565b6040518082815260200191505060405180910390f35b610361610b94565b6040518082815260200191505060405180910390f35b6103a36004803603602081101561038d57600080fd5b8101908080359060200190929190505050610b9a565b6040518082815260200191505060405180910390f35b6103e5600480360360208110156103cf57600080fd5b8101908080359060200190929190505050610bbb565b6040518082815260200191505060405180910390f35b610403610bd3565b6040518082815260200191505060405180910390f35b610421610bd9565b6040518082815260200191505060405180910390f35b6104796004803603602081101561044d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bdf565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b6104d7600480360360208110156104c157600080fd5b8101908080359060200190929190505050610c15565b6040518082815260200191505060405180910390f35b6104f5610c2d565b6040518082815260200191505060405180910390f35b6105576004803603604081101561052157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c51565b6040518082815260200191505060405180910390f35b6105996004803603602081101561058357600080fd5b8101908080359060200190929190505050610cb0565b604051808381526020018281526020019250505060405180910390f35b6105e2600480360360208110156105cc57600080fd5b8101908080359060200190929190505050610ce1565b604051808381526020018281526020019250505060405180910390f35b600061064c600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010184610d12565b905092915050565b600b5481565b6002818154811061066757fe5b90600052602060002090600202016000915090508060000154908060010154905082565b7f000000000000000000000000000000000000000000000000000000000000000081565b600c6020528060005260406000206000915054906101000a900460ff1681565b600c60007f000000000000000000000000000000000000000000000000000000000000000042816106fc57fe5b04815260200190815260200160002060009054906101000a900460ff1661072657610725610e3b565b5b6000610773600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010143610d12565b90506000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015490506000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050600081141561081157600190505b6000600460008154811061082157fe5b906000526020600020906002020160000154600183031061085257600161084c6004600185036111cc565b01610855565b60005b90505b600480549050811080156108895750846004828154811061087557fe5b906000526020600020906002020160000154105b156109375760006004828154811061089d57fe5b9060005260206000209060020201905060006108be60028360000154610d12565b90506000610911600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018460000154610d12565b905081818460010154028161092257fe5b04860195505050508080600101915050610858565b506000600560008154811061094857fe5b90600052602060002090600202016000015460018303106109795760016109736005600185036111cc565b0161097c565b60005b90505b600580549050811080156109b05750846005828154811061099c57fe5b906000526020600020906002020160000154105b15610a965760007f0000000000000000000000000000000000000000000000000000000000000000600583815481106109e557fe5b9060005260206000209060020201600001540390506000610a07600283610d12565b90506000610a56600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010184610d12565b9050818160058681548110610a6757fe5b9060005260206000209060020201600101540281610a8157fe5b0486039550505050808060010191505061097f565b5081600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555083600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055505050505050565b60058181548110610b3957fe5b90600052602060002090600202016000915090508060000154908060010154905082565b60038181548110610b6a57fe5b90600052602060002090600202016000915090508060000154908060010154905082565b600a5481565b600f5481565b60078181548110610ba757fe5b906000526020600020016000915090505481565b600e6020528060005260406000206000915090505481565b60085481565b60095481565b60016020528060005260406000206000915090508060000154908060020154908060030154908060040154908060050154905085565b600d6020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610c5d83836106cf565b610ca8600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010183610d12565b905092915050565b60068181548110610cbd57fe5b90600052602060002090600202016000915090508060000154908060010154905082565b60048181548110610cee57fe5b90600052602060002090600202016000915090508060000154908060010154905082565b60008083805490501415610d295760009050610e35565b82600184805490500381548110610d3c57fe5b9060005260206000209060020201600001548210610d805782600184805490500381548110610d6757fe5b9060005260206000209060020201600101549050610e35565b82600081548110610d8d57fe5b906000526020600020906002020160000154821015610daf5760009050610e35565b600080600185805490500390505b81811115610e12576000600260018484010181610dd657fe5b04905084868281548110610de657fe5b90600052602060002090600202016000015411610e0557809250610e0c565b6001810391505b50610dbd565b848281548110610e1e57fe5b906000526020600020906002020160010154925050505b92915050565b610e43611277565b60007f00000000000000000000000000000000000000000000000000000000000000004281610e6e57fe5b0490506000600360016003805490500381548110610e8857fe5b906000526020600020906002020160010154905060006305f5e1006034600f54840281610eb157fe5b0481610eb957fe5b0490506001600c600085815260200190815260200160002060006101000a81548160ff02191690831515021790555043600e60008581526020019081526020016000208190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bbb30c5d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610f8757600080fd5b505afa158015610f9b573d6000803e3d6000fd5b505050506040513d6020811015610fb157600080fd5b8101908080519060200190929190505050610fce575050506111ca565b6000811415610fdf575050506111ca565b80600d600085815260200190815260200160002081905550600360405180604001604052804381526020018385018152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550506004604051806040016040528043815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050600560405180604001604052807f0000000000000000000000000000000000000000000000000000000000000000430181526020018381525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156111ae57600080fd5b505af11580156111c2573d6000803e3d6000fd5b505050505050505b565b6000826001848054905003815481106111e157fe5b90600052602060002090600202016000015482106112085760018380549050039050611271565b600080600185805490500390505b8181111561126b57600060026001848401018161122f57fe5b0490508486828154811061123f57fe5b9060005260206000209060020201600001541161125e57809250611265565b6001810391505b50611216565b81925050505b92915050565b6000600a54141561129057600854600f8190555061137e565b60006003600160038054905003815481106112a757fe5b90600052602060002090600202016001015490506000600a5482106112d057600a5482036112d6565b81600a54035b90506000600a546305f5e1008302816112eb57fe5b0490506000620f4240600b5483028161130057fe5b049050600a548410611329576305f5e100816305f5e10003600f54028161132357fe5b04611342565b6305f5e100816305f5e10001600f54028161134057fe5b045b600f81905550600854600f54101561136257600854600f81905550611379565b600954600f54111561137857600954600f819055505b5b505050505b56fea2646970667358221220da8bd5794b97514641e585df6ba7a3d23895790dff6428bf513404fcf6a2711a64736f6c634300060c0033";
